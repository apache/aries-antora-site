Title: Maven best practice in Aries

<a name="MavenbestpracticeinAries-Assembledbestpracticenotes"></a>
# Assembled best practice notes

<a name="MavenbestpracticeinAries-Overallstructure"></a>
### Overall structure

The Aries project is a collection of loosely couple sub-projects, therefore
it must be possible to build each project on its own. This implies:

1. A parent pom that isn't at the root of the SVN trunk
1. Each sub-project has enough pom info so that it can be released
independently
1. default-parent has dependency management for basic osgi-dependencies that
all projects are almost certain to use (this includes PAX dependencies for
testing)
1. Each sub-project has legal files in its checkout root
1. Each sub-project has an SCM element in its pom, but no others do.
1. Each subproject has dependency management for everything included in it. 
In addition, it has its subprojects listed in dependency management.  This
means that
1. modules in a subproject don't need to include versions for use of other
modules
1. you can get dependency management for all the modules in a subproject by
depending on the subproject pom with scope import  (see the samples pom for
an example).
1. As a result of the above, modules don't have any versions in any
dependency elements

<a name="MavenbestpracticeinAries-Goodpracticeinthepom"></a>
### Good practice in the pom

1. Alphabetic ordering in dependency management
1. Include a brief description of the project
1. Commenting in platform dependencies, see samples assembly projects.

<a name="MavenbestpracticeinAries-GroupandArtifactnames"></a>
### Group and Artifact names 
1. The Bundle Symbolic Name is explicitly set to the Maven artifactId. For
projects which deliver bundles, the artifactID will therefore completely
describe the jar and must begin org.apache.aries.\{subproject\}. For
projects which do not deliver bundles (for example agregator projects) it
is acceptable to use a short descriptive artifactID.
1. The group ID will overlap with the artifactId and will normally be of the
form org.apache.aries.\{subproject\}

